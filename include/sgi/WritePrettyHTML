// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#include "plugins/SGIHostItemGenerator"

namespace sgi {

template<typename AUTOLOADCLASS>
inline void writePrettyHTMLImpl(std::basic_ostream<char>& os, const SGIHostItemBase * object, bool table=true)
{
    typedef void (*pfn)(std::basic_ostream<char>& os, const SGIHostItemBase * object, bool table);
    pfn func = (pfn)AUTOLOADCLASS::sgiLibraryProcAddress("sgi_writePrettyHTML");
    if(func)
        func(os, object, table);
}

template<typename AUTOLOADCLASS, typename OBJECT_TYPE>
inline void writePrettyHTML(std::basic_ostream<char>& os, OBJECT_TYPE * object, bool table=true)
{
    osg::ref_ptr<SGIHostItemBase> hostitem = SGIHostItemGenerator::generateHostItem(object);
    writePrettyHTMLImpl<AUTOLOADCLASS>(os, hostitem.get(), table);
}

template<typename AUTOLOADCLASS>
inline void writePrettyHTML(std::basic_ostream<char>& os, const SGIHostItemBase * item, bool table=true)
{
    writePrettyHTML<AUTOLOADCLASS>(os, item, table);
}
} // namespace sgi
