// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#if !defined(SGI_NO_HOSTITEM_GENERATOR)
#include "plugins/SGIHostItemGenerator"
#else
#include "plugins/SGIItemBase.h"
#endif

namespace sgi {

template<typename AUTOLOADCLASS>
inline bool generateItem(SGIItemBasePtr & item, const SGIHostItemBase * object)
{
    bool ret;
    typedef bool (*pfn)(osg::ref_ptr<sgi::SGIItemBase> & item, const sgi::SGIHostItemBase * object);
    pfn func = (pfn)AUTOLOADCLASS::sgiLibraryProcAddress("sgi_generateItem");
    if(func)
        ret = func(item, object);
    else
        ret = false;
    return ret;
}

#if !defined(SGI_NO_HOSTITEM_GENERATOR)
template<typename AUTOLOADCLASS, typename OBJECT_TYPE>
inline bool generateItem(SGIItemBasePtr & item, OBJECT_TYPE * object)
{
    osg::ref_ptr<SGIHostItemBase> hostitem = SGIHostItemGenerator::generateHostItem(object);
    return generateItem<AUTOLOADCLASS>(item, hostitem.get());
}
#endif // !defined(SGI_NO_HOSTITEM_GENERATOR)

} // namespace sgi
