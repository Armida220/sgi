// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#include "type_list"
#include "caster"

namespace sgi {
namespace details {
template<typename BASE, typename DERIVED=sgi::details::type_list<>, typename OBJECT_CASTER=DynamicCaster >
struct object_type_info_impl {
    typedef BASE base_type;
    typedef DERIVED derived_types;
    typedef OBJECT_CASTER object_caster;
};

} // namespace details

namespace object_info {
    template<typename BASE>
    struct object_type_info : public sgi::details::object_type_info_impl<BASE> { };
}

#define SGI_CALL_FUNCTION_FOR_OBJECT_TEMPLATE()

#define SGI_CALL_FUNCTION_FOR_OBJECT_BASE(__base_type, __derived_types) \
template<> struct ::sgi::object_info::object_type_info<__base_type> \
    : ::sgi::details::object_type_info_impl<__base_type, __derived_types, DynamicCaster > {};

} // namespace sgi
