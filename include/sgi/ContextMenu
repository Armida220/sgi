// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#if !defined(SGI_NO_HOSTITEM_GENERATOR)
#include "plugins/SGIHostItemGenerator"
#endif
#include "plugins/ContextMenu"

namespace sgi {

template<typename AUTOLOADCLASS>
inline IContextMenu * createContextMenuImpl(QWidget *parent, const SGIHostItemBase * object, IContextMenuInfo * info=NULL)
{
    IContextMenu * ret;
    typedef IContextMenu * (*pfn)(QWidget *parent, const SGIHostItemBase * object, IContextMenuInfo * info);
    pfn func = (pfn)AUTOLOADCLASS::sgiLibraryProcAddress("sgi_createContextMenu");
    if(func)
        ret = func(parent, object, info);
    else
        ret = NULL;
    return ret;
}

template<typename AUTOLOADCLASS>
inline IContextMenu * createContextMenuImpl(QWidget *parent, SGIItemBase * item, IContextMenuInfo * info=NULL)
{
    IContextMenu * ret;
    typedef IContextMenu * (*pfn)(QWidget *parent, SGIItemBase * item, IContextMenuInfo * info);
    pfn func = (pfn)AUTOLOADCLASS::sgiLibraryProcAddress("sgi_createContextMenuItem");
    if(func)
        ret = func(parent, item, info);
    else
        ret = NULL;
    return ret;
}

template<typename AUTOLOADCLASS>
inline IContextMenu * createContextMenu(QWidget *parent, const SGIHostItemBase * item, IContextMenuInfo * info=NULL)
{
    IContextMenu * ret = createContextMenuImpl<AUTOLOADCLASS>(parent, item, info);
    return ret;
}

template<typename AUTOLOADCLASS>
inline IContextMenu * createContextMenu(QWidget *parent, SGIItemBase * item, IContextMenuInfo * info=NULL)
{
    IContextMenu * ret = createContextMenuImpl<AUTOLOADCLASS>(parent, item, info);
    return ret;
}

#if !defined(SGI_NO_HOSTITEM_GENERATOR)
template<typename AUTOLOADCLASS, typename OBJECT_TYPE>
inline IContextMenu * createContextMenu(QWidget *parent, OBJECT_TYPE * object, IContextMenuInfo * info=NULL)
{
    osg::ref_ptr<SGIHostItemBase> hostitem = SGIHostItemGenerator::generateHostItem(object);
    IContextMenu * ret = createContextMenuImpl<AUTOLOADCLASS>(parent, hostitem.get(), info);
    return ret;
}
#endif // !defined(SGI_NO_HOSTITEM_GENERATOR)

} // namespace sgi
