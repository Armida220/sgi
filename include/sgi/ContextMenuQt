// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#include "AutoLoadQt"
#include <QtCore/QPointer>

class QWidget;
class QMenu;

namespace sgi {

class IHostCallback;

class IContextMenuQt : public QObject
{
public:
    virtual                 ~IContextMenuQt() {}
    virtual void            setObject(QObject * item, IHostCallback * callback=NULL) = 0;
    virtual QWidget *       parentWidget() = 0;
    virtual QMenu *         getMenu() = 0;
    virtual IHostCallback * getHostCallback() = 0;
};
typedef QPointer<IContextMenuQt> IContextMenuQtPtr;

template<typename AUTOLOADCLASS>
inline IContextMenuQt * createContextMenuQtImpl(QWidget *parent, QObject * item, IHostCallback * callback=NULL)
{
    IContextMenuQt * ret;
    typedef IContextMenuQt * (*pfn)(QWidget *parent, QObject * item, IHostCallback * callback);
    pfn func = (pfn)AUTOLOADCLASS::sgiLibraryProcAddress("sgi_createContextMenuItemQt");
    if(func)
        ret = func(parent, item, callback);
    else
        ret = NULL;
    return ret;
}

inline IContextMenuQt * createContextMenuQt(QWidget *parent, QObject * item, IHostCallback * callback)
{
    IContextMenuQt * ret = createContextMenuQtImpl<autoload::Qt>(parent, item, callback);
    return ret;
}

} // namespace sgi
