// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#include "SGIPluginInterface.h"

class QTreeWidgetItem;

namespace sgi {

class IObjectTreeImpl : public osg::Referenced
{
public:
    virtual void    itemSelected(IObjectTreeItem * oldItem, IObjectTreeItem * newItem) = 0;
    virtual void    itemContextMenu(IObjectTreeItem * item, IContextMenuPtr & contextMenu) = 0;
    virtual void    itemExpanded(IObjectTreeItem * item) = 0;
    virtual void    itemCollapsed(IObjectTreeItem * item) = 0;
    virtual void    itemActivated(IObjectTreeItem * item) = 0;
    virtual void    itemClicked(IObjectTreeItem * item) = 0;
};
typedef osg::ref_ptr<IObjectTreeImpl> IObjectTreeImplPtr;

class ObjectTreeItem : public IObjectTreeItem
{
public:
    static SGIPluginHostInterface * s_hostInterface;

    ObjectTreeItem (QTreeWidget * widget, IObjectTreeImpl * impl, SGIPluginHostInterface * hostInterface);
    ObjectTreeItem (QTreeWidgetItem * item, SGIPluginHostInterface * hostInterface);
    ObjectTreeItem(const ObjectTreeItem & item);
    virtual ~ObjectTreeItem();

    virtual IObjectTreeItem * root();
    virtual IObjectTreeItem * parent();

    virtual void clear() ;
    IObjectTreeItem * addChild(const std::string & name, SGIItemBase * item);
    IObjectTreeItem * addChild(const std::string & name, const SGIHostItemBase * hostitem);

    IObjectTreeItem * findChild(const std::string & name);

    IObjectTreeItem * addChildIfNotExists(const std::string & name, SGIItemBase * item);
    IObjectTreeItem * addChildIfNotExists(const std::string & name, const SGIHostItemBase * hostitem);

    void setSelected(bool select);
    bool isSelected() const;

    SGIItemBase * item();
    void expand();
    void collapse();

    QTreeWidgetItem * treeItem();
    const QTreeWidgetItem * treeItem() const;

    virtual void children(IObjectTreeItemPtrList & children);

    void reload();

    virtual IObjectTreeItem * selectedItem();

protected:
    IObjectTreeItem * addChildImpl(const std::string & name, SGIItemBase * item);
    static void addDummyChild(QTreeWidgetItem * itemParent);

private:
    SGIPluginHostInterface * _hostInterface;
    QTreeWidgetItem * _item;
};

typedef osg::ref_ptr<IObjectTreeItem> IObjectTreeItemPtr;

} // namespace sgi
