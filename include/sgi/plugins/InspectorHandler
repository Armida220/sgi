// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#include <osgGA/GUIEventHandler>

namespace sgi {

class IHostCallback;
typedef osg::ref_ptr<IHostCallback> IHostCallbackPtr;
class ReferencedPickerBase;
typedef osg::ref_ptr<ReferencedPickerBase> ReferencedPickerBasePtr;

class SceneGraphInspectorHandler : public osgGA::GUIEventHandler
{
public:
    SceneGraphInspectorHandler(IHostCallback * callback);
    virtual ~SceneGraphInspectorHandler();

    virtual bool handle( const osgGA::GUIEventAdapter& ea, osgGA::GUIActionAdapter& aa );

    IHostCallback * getHostCallback() { return _hostCallback.get(); }

protected:
    bool                showSceneGraphDialog(const SGIHostItemOsg * item);
    bool                showObjectLoggerDialog(const SGIHostItemOsg * item);
    bool                contextMenu(const SGIHostItemOsg * item, float x, float y);

protected:
    IHostCallbackPtr    _hostCallback;
    ReferencedPickerBasePtr _picker;
    int                 _inspectorHitTestKey;
    int                 _inspectorEventKey;
    int                 _inspectorLoggerKey;
    int                 _inspectorLoggerModMask;
    int                 _inspectorInfoKey;
    int                 _inspectorInfoKeyModMask;
    int                 _inspectorHitTestMouseButton;
    int                 _inspectorHitTestMouseLeftModMask;
    int                 _inspectorHitTestMouseRightModMask;
    int                 _inspectorContextMenuMouseButton;
    int                 _inspectorContextMenuMouseLeftModMask;
    int                 _inspectorContextMenuMouseRightModMask;
};


} // namespace sgi
