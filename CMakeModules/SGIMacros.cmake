
MACRO(SGI_PLUGIN PLUGIN_NAME)
    SET(TARGET_MAJOR_VERSION ${SGI_MAJOR_VERSION})
    SET(TARGET_MINOR_VERSION ${SGI_MINOR_VERSION})
    SET(TARGET_PATCH_VERSION ${SGI_PATCH_VERSION})

    # here we use the command to generate the library
    #not sure if needed, but for plugins only Msvc need the d suffix
    IF(MSVC)
        SET(TARGET_NO_DEBUG_POSTFIX)
    ENDIF(MSVC)

    SET(TARGET_LABEL_PREFIX "SGIPlugin")
    SET(TARGET_NO_IMPORT_LIB 1)
    SET(TARGET_NO_MANIFEST 1)
    SET(TARGET_NO_LIBPREFIX 1)
    IF(WIN32)
        SET(TARGET_BIN_DIR ${FAST_WORK_BIN_DIR}/${SGI_PLUGINS})
    ELSE(WIN32)
        SET(TARGET_BIN_DIR ${FAST_WORK_LIB_DIR}/${SGI_PLUGINS})
    ENDIF(WIN32)
    SET(TARGET_INSTALL_RUNTIME_DIR ${SGI_PLUGINS})
    SET(TARGET_INSTALL_LIBRARY_DIR ${SGI_PLUGINS})

    SET(TARGET_VERSION ${SGI_VERSION})
    SET(TARGET_SOVERSION ${SGI_SOVERSION})
    SET(TARGET_MAJOR_VERSION ${SGI_MAJOR_VERSION})
    SET(TARGET_MINOR_VERSION ${SGI_MINOR_VERSION})
    SET(TARGET_PATCH_VERSION ${SGI_PATCH_VERSION})
    SET(TARGET_BUILD_VERSION ${SGI_SOVERSION})
    SET(TARGET_PRODUCT_NAME "SGI")
    SET(TARGET_VERSION_RC_INTERNALNAME "SGI")
    SET(TARGET_PRODUCT_COPYRIGHT "Copyright (C) 2012-2015")
    SET(TARGET_NO_TRANSLATION 1)

    IF(NOT SGI_PLUGIN_COUNT)
        SET(SGI_PLUGIN_COUNT 0)
    ENDIF()
    MATH(EXPR SGI_PLUGIN_COUNT "${SGI_PLUGIN_COUNT} + 1")
    SET(SGI_PLUGIN_COUNT "${SGI_PLUGIN_COUNT}" CACHE STRING "Number of plugins for SGI" FORCE)
    SET(SGI_PLUGIN_NAME "${PLUGIN_NAME}")

    include_directories(${CMAKE_CURRENT_BINARY_DIR})
    configure_file(../plugin_config.h.cmake "${CMAKE_CURRENT_BINARY_DIR}/sgi_plugin_config.h")

    SET(LIBRARY_OUTPUT_PATH ${LIBRARY_OUTPUT_PATH}/${OSG_PLUGINS})
    MAKE_DIRECTORY(${OUTPUT_LIBDIR})

    LIST(APPEND TARGET_LIBRARIES_VARS OSG_LIBRARY OSGDB_LIBRARY)

    IF(Qt5Widgets_FOUND)
        #QT5_ADD_RESOURCES( LIB_RC_SRCS ${LIB_QT_RCS} )
        QT5_WRAP_UI( TARGET_UI_HDRS ${TARGET_UI} )
        IF(Qt5Widgets_VERSION VERSION_LESS 5.2.0)
            QT5_WRAP_CPP( TARGET_MOC_SRCS ${TARGET_MOC_H} OPTIONS "-f" )
        ELSE()
            QT5_WRAP_CPP( TARGET_UI_SRCS ${LIB_UI_HDRS} )
            QT5_WRAP_CPP( TARGET_MOC_SRCS ${TARGET_MOC_H} )
        ENDIF()
    ELSE()
        #QT4_ADD_RESOURCES( LIB_RC_SRCS ${LIB_QT_RCS} )
        QT4_WRAP_UI( TARGET_UI_HDRS ${TARGET_UI} )
        QT4_WRAP_CPP( TARGET_MOC_SRCS ${TARGET_MOC_H} OPTIONS "-f" )
    ENDIF()

    SET(TARGET_TARGETNAME "osgdb_sgi_${PLUGIN_NAME}_plugin")

    ADD_LIBRARY(${TARGET_TARGETNAME} MODULE ${TARGET_SRC} ${TARGET_H} ${TARGET_MOC_SRCS} ${TARGET_UI_HDRS} )
    SET_TARGET_PROPERTIES(${TARGET_TARGETNAME} PROPERTIES PREFIX "")
    SETUP_LINK_LIBRARIES()

ENDMACRO(SGI_PLUGIN)
