// kate: syntax C++11;
/* -*-c++-*- OpenSceneGraph - Copyright (C) 1998-2006 Robert Osfield
 *
 * This library is open source and may be redistributed and/or modified under
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the openscenegraph.org website.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * OpenSceneGraph Public License for more details.
*/
//sgi - Copyright (C) 2012-2013 Andreas Roth

#pragma once

#include "plugins/SGIHostItemGenerator"

namespace sgi {

template<typename AUTOLOADCLASS>
inline void writePrettyHTMLImpl(std::basic_ostream<char>& os, const SGIHostItemBase * object, bool table=true)
{
    typedef void (*pfn)(std::basic_ostream<char>& os, const SGIHostItemBase * object, bool table);
    pfn func = (pfn)AUTOLOADCLASS::sgiLibraryProcAddress("sgi_writePrettyHTML");
    if(func)
        func(os, object, table);
}

template<typename AUTOLOADCLASS, typename OBJECT_TYPE>
inline void writePrettyHTML(std::basic_ostream<char>& os, OBJECT_TYPE * object, bool table=true)
{
    osg::ref_ptr<SGIHostItemBase> hostitem = SGIHostItemGenerator::generateHostItem(object);
    writePrettyHTMLImpl<AUTOLOADCLASS>(os, hostitem.get(), table);
}

template<typename AUTOLOADCLASS>
inline void writePrettyHTML(std::basic_ostream<char>& os, const SGIHostItemBase * item, bool table=true)
{
    writePrettyHTML<AUTOLOADCLASS>(os, item, table);
}
} // namespace sgi
