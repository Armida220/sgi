// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#if defined(_MSC_VER) || defined(__CYGWIN__) || defined(__MINGW32__) || defined( __BCPLUSPLUS__) || defined( __MWERKS__)
    #  if defined( SGI_LIBRARY )
    #    define SGI_EXPORT   __declspec(dllexport)
    #  else
    #    define SGI_EXPORT   __declspec(dllimport)
    #  endif
#elif defined(__GNUC__)
    #  define SGI_EXPORT __attribute__ ((visibility ("default")))
#else
    #  define SGI_EXPORT
#endif
/**

\namespace sgi

The sgi library is a NodeKit that allows to inspect and modify a scene graph during runtime.
*/


#define SGI_MAJOR_VERSION    @SGI_MAJOR_VERSION@
#define SGI_MINOR_VERSION    @SGI_MINOR_VERSION@
#define SGI_PATCH_VERSION    @SGI_PATCH_VERSION@
#define SGI_SOVERSION        @SGI_SOVERSION@

#define SGI_VERSION_STR      "@SGI_VERSION@"
#define SGI_SOVERSION_STR    "@SGI_SOVERSION@"

#define SGI_LIBRARY_POSTFIX_DEBUG    "@SGI_LIBRARY_POSTFIX_DEBUG@"

#ifdef _DEBUG
#define SGI_LIBRARY_NAME "@SGI_LIBRARY_NAME_DEBUG@"
#define SGI_LIBRARY_POSTFIX "@SGI_LIBRARY_POSTFIX_DEBUG@"
#else // _DEBUG
#  ifdef _MINSIZEREL
#    define SGI_LIBRARY_NAME "@SGI_LIBRARY_NAME_MINSIZEREL@"
#    define SGI_LIBRARY_POSTFIX "@SGI_LIBRARY_POSTFIX_MINSIZEREL@"
#  else // _MINSIZEREL
#    ifdef _RELWITHDEBINFO
#      define SGI_LIBRARY_NAME "@SGI_LIBRARY_NAME_RELWITHDEBINFO@"
#      define SGI_LIBRARY_POSTFIX "@SGI_LIBRARY_POSTFIX_RELWITHDEBINFO@"
#    else // _RELWITHDEBINFO
#      define SGI_LIBRARY_NAME "@SGI_LIBRARY_NAME_RELEASE@"
#      define SGI_LIBRARY_POSTFIX "@SGI_LIBRARY_POSTFIX_RELEASE@"
#    endif // _RELWITHDEBINFO
#  endif // _MINSIZEREL
#endif // _DEBUG

extern "C" {
/**
  * sgiGetVersion() returns the library version number.
  * Numbering convention : SGI-@SGI_MINOR_VERSION@ will return @SGI_MINOR_VERSION@ from sgiGetVersion.
  *
*/
extern SGI_EXPORT const char* sgiGetVersion();

/** The sgiGetSOVersion() method returns the SGI shared object version number. */
extern SGI_EXPORT const char* sgiGetSOVersion();

/** The sgiGetLibraryName() method returns the library name in human-friendly form. */
extern SGI_EXPORT const char* sgiGetLibraryName();

}
